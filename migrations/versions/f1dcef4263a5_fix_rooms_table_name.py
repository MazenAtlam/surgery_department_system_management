"""fix rooms table name

Revision ID: f1dcef4263a5
Revises: 995966f198f8
Create Date: 2025-05-02 03:26:29.270642

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "f1dcef4263a5"
down_revision = "995966f198f8"
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "rooms",
        sa.Column("room_location", sa.String(), nullable=False),
        sa.Column("room_device_id", sa.String(length=128), nullable=False),
        sa.Column("department_id", sa.String(length=128), nullable=False),
        sa.Column("id", sa.String(length=128), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.Column("deleted_at", sa.DateTime(), nullable=True),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["room_device_id"],
            ["medical_devices.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("room_device_id"),
        sa.UniqueConstraint("room_location"),
    )
    with op.batch_alter_table("rooms", schema=None) as batch_op:
        batch_op.create_index(batch_op.f("ix_rooms_id"), ["id"], unique=False)

    with op.batch_alter_table("room", schema=None) as batch_op:
        batch_op.drop_index("ix_room_id")

    op.drop_table("room")
    with op.batch_alter_table("appointments", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(None, "rooms", ["room_id"], ["id"])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("appointments", schema=None) as batch_op:
        batch_op.drop_constraint(None, type_="foreignkey")
        batch_op.create_foreign_key(None, "room", ["room_id"], ["id"])

    op.create_table(
        "room",
        sa.Column("room_location", sa.VARCHAR(), nullable=False),
        sa.Column("room_device_id", sa.VARCHAR(length=128), nullable=False),
        sa.Column("department_id", sa.VARCHAR(length=128), nullable=False),
        sa.Column("id", sa.VARCHAR(length=128), nullable=False),
        sa.Column("created_at", sa.DATETIME(), nullable=False),
        sa.Column("updated_at", sa.DATETIME(), nullable=False),
        sa.Column("deleted_at", sa.DATETIME(), nullable=True),
        sa.ForeignKeyConstraint(
            ["department_id"],
            ["departments.id"],
        ),
        sa.ForeignKeyConstraint(
            ["room_device_id"],
            ["medical_devices.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("room_device_id"),
        sa.UniqueConstraint("room_location"),
    )
    with op.batch_alter_table("room", schema=None) as batch_op:
        batch_op.create_index("ix_room_id", ["id"], unique=False)

    with op.batch_alter_table("rooms", schema=None) as batch_op:
        batch_op.drop_index(batch_op.f("ix_rooms_id"))

    op.drop_table("rooms")
    # ### end Alembic commands ###
